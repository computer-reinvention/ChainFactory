@chainlink: extract_datetimes --

prompt: |
  Current DateTime: {current_dt}
  Instructions:
    - Given a text, extract the exact datetime phrases from the latest context.
    - Only extract phrases that are related to scheduling and calendars.
    - For ranges, return the start and end datetimes separately.
    - Do not convert the datetime phrases to timestamps - only return the phrases.
    - Remove ALL unnecessary punctuation and whitespace from the phrases.

  Input Text:
  {text}

  Extract all scheduling related datetime phrases. Go!

def:
  TimeZoneModel:
    abbreviation: str?
    zone: str
    offset: str

  MentionedDateTime:
    datetime: str
    datetime_range_start: str
    datetime_range_end: str
    timezone: TimeZoneModel?
    timezone_mentioned: bool
    has_date: bool
    has_time: bool
    is_range: bool

out:
  mentions: list[MentionedDateTime]

@chainlink: filter_datetimes ||

prompt: |
  Instructions:
    - Given a list of free time slots, filter out slots according to the following criteria:
		-- Remove any slots that do not fall within normal business hours.
		-- Remove any slots that are irrelevant when considering the input text.

  Mentioned DateTimes:
  {mentions}

  Filter out any mentions that are not related to scheduling and calendars. Return a bulleted list of the filtered mentions. Go!

out:
	filtered_mentions: str
